@model WebSite_CuaHangDienThoai.Models.Admin_TokenVoucher

@using (Ajax.BeginForm("Add", "Voucher", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "load_data",
    OnSuccess = "OnSuccessCO",
    OnFailure = "OnFailure",
    OnBegin = "OnBeginCO"
}, new { @Id = "myForm" }))
{


    <script>

        function validateForm() {

            var title = $('#Title').val().trim();
            var quantity = $('#Quantity').val().trim();
            var percentPriceReduction = $('#PercentPriceReduction').val().trim();
            var usedDateStr = $('#UsedDate').val().trim();
            var modifiedDateStr = $('#ModifiedDate').val().trim();

            var usedDate = new Date(usedDateStr);
            var modifiedDate = new Date(modifiedDateStr);
            var currentDate = new Date();
            var errors = [];

            if (!title) {
                errors.push('Tiêu đề không được để trống.');
                $('#Title').addClass('is-invalid');
            } else {
                $('#Title').removeClass('is-invalid');
            }

            if (!quantity) {
                errors.push('Số lượng không được để trống.');
                $('#Quantity').addClass('is-invalid');
            } else {
                $('#Quantity').removeClass('is-invalid');
            }

            if (!percentPriceReduction) {
                errors.push('Phần trăm giảm giá không được để trống.');
                $('#PercentPriceReduction').addClass('is-invalid');
            } else if (parseFloat(percentPriceReduction) > 10) {
                errors.push('Phần trăm giảm giá không được lớn hơn 10%.');
                $('#PercentPriceReduction').addClass('is-invalid');
            } else {
                $('#PercentPriceReduction').removeClass('is-invalid');
            }

            if (isNaN(usedDate.getTime())) {
                errors.push('Ngày bắt đầu chương trình Voucher không được để trống.');
                $('#UsedDate').addClass('is-invalid');
            } else if (usedDate < currentDate) {
                errors.push('Ngày bắt đầu chương trình Voucher không được nhỏ hơn ngày hiện tại.');
                $('#UsedDate').addClass('is-invalid');
            } else {
                $('#UsedDate').removeClass('is-invalid');
            }

            if (isNaN(modifiedDate.getTime())) {
                errors.push('Ngày kết thúc không được để trống.');
                $('#ModifiedDate').addClass('is-invalid');
            } else if (modifiedDate <= usedDate) {
                errors.push('Ngày kết thúc chương trình Voucher không được nhỏ hơn hoặc bằng ngày bắt đầu.');
                $('#ModifiedDate').addClass('is-invalid');
            } else {
                $('#ModifiedDate').removeClass('is-invalid');
            }

            if (errors.length > 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    html: errors.join('<br>'),
                });
                return  false; // Sửa lỗi ở đây
            }

            return true;
        }

        $(document).ready(function () {
         

            $('#myForm').submit(function (event) {
                event.preventDefault(); // Ngăn chặn hành động mặc định của form
                if (validateForm()) {
                    var formData = $(this).serialize(); // Lấy dữ liệu từ biểu mẫu
                    $.ajax({
                        url: '/Admin/Voucher/Add',
                        type: 'POST',
                        data: formData,
                        success: function (res) {
                            OnSuccessCO(res); // Gọi hàm xử lý phản hồi
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                        }
                    });
                }
            });

        });

       

        function OnBeginCO() {
            $('#btnRegister').attr("disabled", "disabled");
        }

        function OnSuccessCO(res) {
            if (res.Success) {
                if (res.Code == 1) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.onmouseenter = Swal.stopTimer;
                            toast.onmouseleave = Swal.resumeTimer;
                        }
                    });

                    Toast.fire({
                        icon: "success",
                        title: "Thêm voucher thành công"
                    });
                    location.href = "/admin/Voucher/index";
                }
            } else {
                if (res.Code == -2) {
                    Swal.fire({
                        icon: "error",
                        title: "Không thể bỏ trống...",
                        text: "Vui lòng điền đủ thông tin",
                    });
                }
                if (res.Code == -3) {
                    Swal.fire({
                        icon: "error",
                        title: "Lỗi dữ liệu...",
                        text: "Tên đã tồn tại",
                    });
                }
                if (res.Code == -4) {
                    Swal.fire({
                        icon: "error",
                        title: "Không thành công...",
                        text: "Không tìm thấy ảnh",
                    });
                }
                if (res.Code == -5) {
                    Swal.fire({
                        icon: "warning",
                        title: "Không thành công...",
                        text: "Thêm không thành công",
                    });
                }
                if (res.Code == -99) {
                    Swal.fire({
                        icon: "warning",
                        title: "Không thành công...",
                        text: "Lỗi trong quá trình thêm",
                    });
                }
            }
        }
    </script>

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin thêm mới danh mục sản phẩm</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12 ">
                    @using (Html.BeginForm("Add", "Voucher", FormMethod.Post, new { }))
                    {
                        <div class="card">
                            <div class="card-body">
                                <div class="tab-content">
                                    <div class="active tab-pane" id="activity">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Tiêu đề Voucher</label>
                                            <input type="text" name="Title" id="Title" required class="form-control" autocomplete="off" placeholder="Tiêu đề Voucher" />
                                            @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-6">
                                                    <label for="exampleInputEmail1">Số lượng Voucher</label>
                                                    <input type="number" name="Quantity" id="Quantity" required class="form-control" autocomplete="off" placeholder="Số lượng Voucher" />
                                                    @Html.ValidationMessageFor(x => x.Quantity, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="col-6">
                                                    <label for="exampleInputEmail1">Phần trăm giá giảm</label>
                                                    <input type="number" name="PercentPriceReduction" id="PercentPriceReduction" required class="form-control" autocomplete="off" placeholder="Phần trăm giảm giá" />
                                                    @Html.ValidationMessageFor(x => x.PercentPriceReduction, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-6">
                                                    <label for="exampleInputEmail1">Ngày bắt đầu Voucher</label>
                                                    <input type="datetime-local" name="UsedDate" id="UsedDate" required class="form-control" autocomplete="off" />
                                                    @Html.ValidationMessageFor(x => x.UsedDate, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="col-6">
                                                    <label for="exampleInputEmail1">Ngày kết thúc Voucher</label>
                                                    <input type="datetime-local" name="ModifiedDate" id="ModifiedDate" required class="form-control" autocomplete="off" />
                                                    @Html.ValidationMessageFor(x => x.ModifiedDate, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-2"></div>
                                    <div class="col-8 text-center">
                                        <div class="form-group">
                                            <button type="button" onclick="if(validateForm()) $('#myForm').submit();" class="btn btn-success col-8">Thêm mới</button>
                                        </div>


                                    </div>
                                    <div class="col-2"></div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="card-footer"></div>
    </div>
}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.19.3/jquery.validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


