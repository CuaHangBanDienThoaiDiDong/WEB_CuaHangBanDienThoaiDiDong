@model WebSite_CuaHangDienThoai.Models.tb_Products
@{
    ViewBag.Title = "Chỉnh sửa sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/products" class="nav-link">Sản phẩm</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Cập nhật</a>
        </li>
    </ul>
}


<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Cập nhật Sản phẩm</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/Admin/Products/">Sản phẩm</a></li>
                    <li class="breadcrumb-item active">Cập nhật</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>


<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin Sản phẩm</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(x => x.ProductsId)
                        @Html.HiddenFor(x => x.CreatedDate)
                        @Html.HiddenFor(x => x.Alias)
                        @Html.HiddenFor(x => x.ProductCode)
                        <div class="card">
                            <div class="card-header p-2">
                                <ul class="nav nav-pills">
                                    <li class="nav-item"><a class="nav-link active" href="#activity" data-toggle="tab">Thông tin chung</a></li>
                                    <li class="nav-item"><a class="nav-link" href="#infor" data-toggle="tab">Thông số kỹ thuật</a></li>
                                    <li class="nav-item"><a class="nav-link" href="#timeline" data-toggle="tab">Hình ảnh</a></li>

                                    @*<li class="nav-item"><a class="nav-link" href="#settings" data-toggle="tab">SEO</a></li>*@
                                </ul>
                            </div><!-- /.card-header -->
                            <div class="card-body">
                                <div class="tab-content">
                                    <div class="active tab-pane" id="activity">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Tên sản phẩm</label>
                                            @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Tên sản phẩm", id = "Title" })
                                            @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                                        </div>
                                        @*<div class="form-group " style="display:none">
                                            <label for="exampleInputEmail1">Alias</label>
                                            @Html.TextBoxFor(x => x.Alias, new { @class = "form-control", @placeholder = "Alias" })
                                            @Html.ValidationMessageFor(x => x.Alias, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group" style="display:none">
                                            <label for="exampleInputEmail1">SKU</label>
                                            @Html.TextBoxFor(x => x.ProductCode, new { @class = "form-control", @placeholder = "Mã mã phẩm" })
                                            @Html.ValidationMessageFor(x => x.ProductCode, null, new { @class = "text-danger" })
                                        </div>*@
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Loại sản phẩm</label>
                                            @Html.DropDownListFor(x => x.ProductCategoryId, ViewBag.ProductCategory as SelectList, "-Chọn danh mục sản phẩm-", new { @class = "form-control", @placeholder = "Mã mã phẩm", id = "ProductCategoryId" })
                                            @Html.ValidationMessageFor(x => x.ProductCategoryId, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Hãng sản xuất</label>
                                            @Html.DropDownListFor(x => x.ProductCompanyId, ViewBag.ProductCompany as SelectList, "-Chọn hãng sản phẩm-", new { @class = "form-control", @placeholder = "Mã mã phẩm", id = "ProductCompanyId" })
                                            @Html.ValidationMessageFor(x => x.ProductCompanyId, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Mô tả</label>
                                            @*@Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Mã mã phẩm" })
                                @Html.ValidationMessageFor(x => x.Description, null, new { @class = "text-danger" })*@
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Chi tiết sản phẩm</label>
                                            @*@Html.TextAreaFor(x => x.Detail, new { @class = "form-control", @id = "txtDetail" })
                                @Html.ValidationMessageFor(x => x.Detail, null, new { @class = "text-danger" })*@
                                        </div>

                                        <div class="row">
                                            <div class="col-3">
                                                <div class="form-group">



                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <!-- /.tab-Imge -->
                                    <div class="tab-pane" id="timeline">
                                        <div class="row">
                                            <div class="col-md-12">
                                                @*<input type="button" class="btn btn-primary" id="iTaiAnh" onclick="BrowseServer();" value="Tải ảnh" />*@


                                            </div>
                                            <div class="col-md-12">
                                                <table class="table table-hover" id="tbAnhSanPham">
                                                    <thead>
                                                        <tr>
                                                            <th class="text-center">STT</th>
                                                            <th class="text-center">Ảnh</th>
                                                            <th class="text-center">Ảnh cập nhập</th>
                                                            @*<th class="text-center">Thao tác</th>*@
                                                        </tr>
                                                    </thead>
                                                    <tbody id="tbHtml">
                                                        @if (Model.tb_ProductImage != null && Model.tb_ProductImage.Any())
                                                        {
                                                            var i = 1;
                                                            foreach (var item in Model.tb_ProductImage)
                                                            {
                                                                var imgSrc = item.Image != null ? "data:image;base64," + Convert.ToBase64String(item.Image) : "";
                                                                <tr>
                                                                    <td class="text-center">@i</td>

                                                                    <td class="text-center" style="width: 30%;">
                                                                        <label class="" id="lbAnhCu" style="display: none ">Ảnh mới:</label>
                                                                        <img src="data:image;base64,@Convert.ToBase64String(item.Image)" alt="Current Image" id="currentImage" style="width: 30%; height: 30%; " />

                                                                        <div class=" form-group text-center " id="muiTen" style="display: none ;justify-content: center; align-items: center; height: 100px; margin-top: 50%">
                                                                            <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" style="color:greenyellow" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
                                                                                <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708" />
                                                                                <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708" />
                                                                            </svg>
                                                                        </div>
                                                                    </td>
                                                                    <td class="text-center" style="width: 30%;">

                                                                        <div class="form-group text-center newImage">
                                                                            <label class="" id="lbImagePreview" style="display: none ">Ảnh mới:</label>
                                                                            <img id="newImagePreview" src="#" alt="New Image Preview" style="display:none;width:50%;height:50%; " />
                                                                        </div>
                                                                        <div class="form-group text-center">
                                                                            <label for="exampleInputFile">Thay đổi </label>
                                                                            <input type="file" name="newImage" id="newImage" accept="image/jpeg, image/png, image/gif" onchange="previewImage(event)" />

                                                                        </div>

                                                                    </td>

                                                                </tr>


                                                                i++;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <tr>
                                                               

                                                                <td class="text-center" style="width: 30%;">
                                                                  

                                                                    <div class=" form-group text-center " id="muiTen" style="display: none ;justify-content: center; align-items: center; height: 100px; margin-top: 50%">
                                                                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" style="color:greenyellow" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
                                                                            <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708" />
                                                                            <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708" />
                                                                        </svg>
                                                                    </div>
                                                                </td>
                                                                <td class="text-center" style="width: 30%;">

                                                                    <div class="form-group text-center newImage">
                                                                        <label class="" id="lbImagePreview" style="display: none ">Ảnh mới:</label>
                                                                        <img id="newImagePreview" src="#" alt="New Image Preview" style="display:none;width:50%;height:50%; " />
                                                                    </div>
                                                                    <div class="form-group text-center">
                                                                        <label for="exampleInputFile">Thay đổi </label>
                                                                        <input type="file" name="newImage" id="newImage" accept="image/jpeg, image/png, image/gif" onchange="previewImage(event)" />

                                                                    </div>

                                                                </td>

                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                                <input type="hidden" id="tCurrentId" value="0" />
                                            </div>
                                        </div>
                                    </div>




                                    <!-- /.tab-pane -->
                                    <div class="tab-pane" id="settings">
                                        <form class="form-horizontal">
                                            <div class="form-group row">
                                                <label for="inputName" class="col-sm-2 col-form-label">SEO Title</label>
                                                @*<div class="col-sm-10">
                                        @Html.TextBoxFor(x => x.SeoTitle, new { @class = "form-control", @placeholder = "SeoTitle" })
                                        @Html.ValidationMessageFor(x => x.SeoTitle, null, new { @class = "text-danger" })
                                    </div>*@
                                            </div>
                                            <div class="form-group row">
                                                <label for="inputEmail" class="col-sm-2 col-form-label">SeoKeywords</label>
                                                @*<div class="col-sm-10">
                                        @Html.TextBoxFor(x => x.SeoKeywords., new { @class = "form-control", @placeholder = "SeoKeywords" })
                                        @Html.ValidationMessageFor(x => x.SeoKeywords, null, new { @class = "text-danger" })
                                    </div>*@
                                            </div>
                                            <div class="form-group row">
                                                <label for="inputName2" class="col-sm-2 col-form-label">SeoDescription</label>
                                                @*<div class="col-sm-10">
                                        @Html.TextBoxFor(x => x.SeoDescription, new { @class = "form-control", @placeholder = "SeoDescription" })
                                        @Html.ValidationMessageFor(x => x.SeoDescription, null, new { @class = "text-danger" })
                                    </div>*@
                                            </div>

                                        </form>
                                    </div>


                                    <!-- /.tab-pane -->
                                    <div class="tab-pane" id="infor">
                                        <div class="form-group">
                                            <div class="bg-gray-light">
                                                <h4 class="m-lg-4 " style="color:blue"><b>Hệ điều hành & CPU</b></h4>
                                            </div>
                                            <div class="row">
                                                <div class="col-3">
                                                    <label for="exampleInputEmail1">Hệ điều hành:</label>
                                                    @Html.TextBoxFor(x => x.OperatingSystem, new { @class = "form-control", @placeholder = "Tên sản phẩm", id = "OperatingSystem" })
                                                    @Html.ValidationMessageFor(x => x.OperatingSystem, null, new { @class = "text-danger" })

                                                </div>
                                                <div class="col-3">
                                                    <label for="exampleInputEmail1"> CPU:</label>

                                                    @Html.TextBoxFor(x => x.CPU, new { @class = "form-control", @placeholder = "CPU sản phẩm", id = "CPU" })
                                                    @Html.ValidationMessageFor(x => x.CPU, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="col-3">
                                                    <label for="exampleInputEmail1">Tốc độ CPU:</label>

                                                    @Html.TextBoxFor(x => x.CPUspeed, new { @class = "form-control", @placeholder = "Tốc dộc CPU sản phẩm", id = "CPUspeed" })
                                                    @Html.ValidationMessageFor(x => x.CPUspeed, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="col-3">
                                                    <label for="exampleInputEmail1"> GPU:</label>
                                                    @Html.TextBoxFor(x => x.GPU, new { @class = "form-control", @placeholder = "GPU sản phẩm", id = "GPU" })
                                                    @Html.ValidationMessageFor(x => x.GPU, null, new { @class = "text-danger" })
                                                </div>

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="bg-gray-light">
                                                <h4 class="m-lg-4 " style="color:blue"><b>Kết nối</b></h4>
                                            </div>
                                            <div class="row">
                                                <div class="col-3">
                                                    <label for="exampleInputEmail1">Mạng di động:</label>
                                                    @Html.TextBoxFor(x => x.MobileNetwork, new { @class = "form-control", @placeholder = "Mạng di động", id = "MobileNetwork" })
                                                    @Html.ValidationMessageFor(x => x.MobileNetwork, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="col-3">
                                                    <label for="exampleInputEmail1">SIM:</label>
                                                    @Html.TextBoxFor(x => x.Sim, new { @class = "form-control", @placeholder = "Tên sản phẩm", id = "Sim" })
                                                    @Html.ValidationMessageFor(x => x.Sim, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="col-3">

                                                    <label for="exampleInputEmail1">Wifi:</label>

                                                    @Html.TextBoxFor(x => x.Wifi, new { @class = "form-control", @placeholder = "Tên sản phẩm", id = "Wifi" })
                                                    @Html.ValidationMessageFor(x => x.Wifi, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="col-3">
                                                    <label for="exampleInputEmail1">GPS:</label>
                                                    @*@Html.TextAreaFor(x => x.GPS, new { @class = "form-control", @id = "txtDetail" })
                                        @Html.ValidationMessageFor(x => x.GPS, null, new { @class = "text-danger" })*@
                                                    @Html.TextBoxFor(x => x.GPS, new { @class = "form-control", @placeholder = "Tên sản phẩm", id = "GPS" })
                                                    @Html.ValidationMessageFor(x => x.GPS, null, new { @class = "text-danger" })
                                                </div>


                                            </div>


                                            <div class="row">
                                                <div class="col-4">
                                                    <label for="exampleInputEmail1">Bluetooth:</label>
                                                    @Html.TextBoxFor(x => x.Bluetooth, new { @class = "form-control", @placeholder = "Tên sản phẩm", id = "Bluetooth" })
                                                    @Html.ValidationMessageFor(x => x.Bluetooth, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="col-4">
                                                    <label for="exampleInputEmail1">Cổng kết nối/sạc:</label>
                                                    @Html.TextBoxFor(x => x.Connector, new { @class = "form-control", @placeholder = "Tên sản phẩm", id = "Connector" })
                                                    @Html.ValidationMessageFor(x => x.Connector, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="col-4">
                                                    <label for="exampleInputEmail1">Jack tai nghe:</label>
                                                    @Html.TextBoxFor(x => x.Headphonejack, new { @class = "form-control", @placeholder = "Tên sản phẩm", id = "Headphonejack" })
                                                    @Html.ValidationMessageFor(x => x.Headphonejack, null, new { @class = "text-danger" })
                                                </div>

                                            </div>

                                        </div>


                                        <div class="form-group">
                                            <div class="bg-gray-light">
                                                <h4 class="m-lg-4 " style="color:blue"><b>Pin & Sạc</b></h4>
                                            </div>
                                            <div class="row">

                                                <div class="col-6">
                                                    <label for="exampleInputEmail1">Loại pin:</label>
                                                    @Html.TextBoxFor(x => x.BatteryType, new { @class = "form-control", @placeholder = "Loại pin", id = "BatteryType" })
                                                    @Html.ValidationMessageFor(x => x.BatteryType, null, new { @class = "text-danger" })
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="col-6">
                                                    <label for="exampleInputEmail1">Công nghệ pin:</label>
                                                    @*@Html.TextAreaFor(x => x.CongNghePin, new { @class = "form-control", @id = "txtDetail" })
                                        @Html.ValidationMessageFor(x => x.CongNghePin, null, new { @class = "text-danger" })*@
                                                    @Html.TextBoxFor(x => x.BatteryTechnology, new { @class = "form-control", @placeholder = "Công nghệ pin", id = "BatteryTechnology" })
                                                    @Html.ValidationMessageFor(x => x.BatteryTechnology, null, new { @class = "text-danger" })
                                                </div>
                                                <div class="col-6">
                                                    <label for="exampleInputEmail1">Hỗ trợ sạc:</label>
                                                    @Html.TextBoxFor(x => x.ChargingSupport, new { @class = "form-control", @placeholder = "Hỗ trợ sạc", id = "ChargingSupport" })
                                                    @Html.ValidationMessageFor(x => x.ChargingSupport, null, new { @class = "text-danger" })

                                                </div>
                                            </div>

                                        </div>


                                    </div>

                                </div>
                                <!-- /.tab-content -->
                            </div><!-- /.card-body -->
                            <div class="form-group">
                                <button type="submit" class="btn btn-success">Lưu Lại</button>
                                <a href="/admin/products" class="btn btn-danger">Quay lại</a>
                            </div>
                        </div> <!-- /.card -->
                    }
                </div>
            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">

        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>

@section scripts {
    <script>

        function validateForm() {
            var isValid = true;

            // Kiểm tra trường Title
            if (!$('#Title').val().trim()) {
                $('#Title').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                isValid = false;
            } else {
                $('#Title').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
            }

           

            // Kiểm tra dropdown ProductCategoryId
            if (!$('#ProductCategoryId').val()) {
                $('#ProductCategoryId').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                isValid = false;
            } else {
                $('#ProductCategoryId').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
            }

            // Kiểm tra dropdown ProductCompanyId
            if (!$('#ProductCompanyId').val()) {
                $('#ProductCompanyId').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                isValid = false;
            } else {
                $('#ProductCompanyId').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
            }

            // Kiểm tra trường Alias (nếu có)
            if ($('#OperatingSystem').length > 0) {
                if (!$('#OperatingSystem').val().trim()) {
                    $('#OperatingSystem').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#OperatingSystem').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#CPU').length > 0) {
                if (!$('#CPU').val().trim()) {
                    $('#CPU').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#CPU').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }

            if ($('#CPUspeed').length > 0) {
                if (!$('#CPUspeed').val().trim()) {
                    $('#CPUspeed').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#CPUspeed').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#GPU').length > 0) {
                if (!$('#GPU').val().trim()) {
                    $('#GPU').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#GPU').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#MobileNetwork').length > 0) {
                if (!$('#MobileNetwork').val().trim()) {
                    $('#MobileNetwork').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#MobileNetwork').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#Sim').length > 0) {
                if (!$('#Sim').val().trim()) {
                    $('#Sim').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#Sim').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#Wifi').length > 0) {
                if (!$('#Wifi').val().trim()) {
                    $('#Wifi').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#Wifi').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#GPS').length > 0) {
                if (!$('#GPS').val().trim()) {
                    $('#GPS').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#GPS').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#Bluetooth').length > 0) {
                if (!$('#Bluetooth').val().trim()) {
                    $('#Bluetooth').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#Bluetooth').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#Connector').length > 0) {
                if (!$('#Connector').val().trim()) {
                    $('#Connector').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#Connector').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#Headphonejack').length > 0) {
                if (!$('#Headphonejack').val().trim()) {
                    $('#Headphonejack').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#Headphonejack').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#BatteryTechnology').length > 0) {
                if (!$('#BatteryTechnology').val().trim()) {
                    $('#BatteryTechnology').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#BatteryTechnology').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#BatteryType').length > 0) {
                if (!$('#BatteryType').val().trim()) {
                    $('#BatteryType').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#BatteryType').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            if ($('#ChargingSupport').length > 0) {
                if (!$('#ChargingSupport').val().trim()) {
                    $('#ChargingSupport').addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $('#ChargingSupport').removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            }
            $('.row:first-child input[type="text"], .row:first-child textarea').each(function () {
                if (!$(this).val().trim()) {
                    $(this).addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    $(this).removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
            });

            return isValid;
        }

        $('form').submit(function () {
            if (!validateForm()) {
                Swal.fire({
                    icon: "error",
                    title: "Lỗi...",
                    text: "Vui lòng nhập đầy đủ thông tin",
                });
                return false; // Ngăn không cho form submit nếu thông tin không hợp lệ
            }
        });



        function previewImage(event) {
            var reader = new FileReader();
            reader.onload = function () {
                var output = document.getElementById('newImagePreview');
                var labelAnhCu = document.getElementById('lbAnhCu');
                var lbImagePreview = document.getElementById('lbImagePreview');
                var muiTen = document.getElementById('muiTen');
                output.src = reader.result;
                output.style.display = 'block';
                if (labelAnhCu && muiTen && lbImagePreview) {
                    labelAnhCu.style.display = 'block';
                    muiTen.style.display = 'block';
                    lbImagePreview.style.display = 'block';
                }
           
            }
            reader.readAsDataURL(event.target.files[0]);
        }


        $(document).ready(function () {
            $('.auto').autoNumeric('init');

            $('#demoPrice').on('blur focusout keypress keyup', function () {
                var demoGet = $('#demoPrice').autoNumeric('get');
                $('#Price').val(demoGet);
                $('#Price').autoNumeric('set', demoGet);
            });

            $('#demoPriceSale').on('blur focusout keypress keyup', function () {
                var demoGet = $('#demoPriceSale').autoNumeric('get');
                $('#PriceSale').val(demoGet);
                $('#PriceSale').autoNumeric('set', demoGet);
            });

            $('#demoOriginalPrice').on('blur focusout keypress keyup', function () {
                var demoGet = $('#demoOriginalPrice').autoNumeric('get');
                $('#OrigianlPrice').val(demoGet);
                $('#OrigianlPrice').autoNumeric('set', demoGet);
            });

            $('body').on('click', '.btnXoaAnh', function () {
                var conf = confirm('Bạn có muốn xóa ảnh này không?');
                if (conf === true) {
                    var _id = $(this).data('id');
                    $('#trow_' + _id).fadeTo('fast', 0.5, function () {
                        $(this).slideUp('fast', function () { $(this).remove(); });
                    });
                    var temp = $('#tCurrentId').val();
                    var currentId = parseInt(temp) - 1;
                    $('#tCurrentId').val(currentId);
                }
            });

            CKEDITOR.replace('txtDetail', {
                customConfig: '/content/ckeditor/config.js',
                extraAllowedContent: 'span',
            });

            // Bắt sự kiện nút Lưu lại
            $('#saveButton').click(function () {
                var images = [];
                var rDefault = [];

                $('#tbHtml tr').each(function (index) {
                    var imgSrc = $(this).find('img').attr('src');
                    images.push(imgSrc);

                    if ($(this).find('input[type="radio"]').is(':checked')) {
                        rDefault.push(index + 1);
                    }
                });

                $.ajax({
                    type: "POST",
                    url: "/admin/Product/AddImg",
                    data: {
                        productsId: $('#ProductsId').val(),
                        Images: images,
                        rDefault: rDefault
                    },
                    traditional: true,
                    success: function (response) {
                        alert(response.message);
                        if (response.success) {
                            location.reload();
                        }
                    },
                    error: function () {
                        alert('Đã xảy ra lỗi khi gửi yêu cầu thêm ảnh');
                    }
                });
            });

            // Sự kiện khi click vào nút "Cập nhật ảnh"
            $('body').on('click', '.btnCapNhapAnhh', function () {
                var productsId = $(this).data('producid');
                var productImgId = $(this).data('idimg');
                BrowseServerForUpdate(productsId, productImgId);
            });
        });

        // Hàm để mở CKFinder và thêm ảnh mới
        function BrowseServer() {
            var finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                addImageProduct(fileUrl);
            };
            finder.popup();
        }

        // Hàm để mở CKFinder và cập nhật ảnh hiện có
        function BrowseServerForUpdate(productsId, productImgId) {
            var finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                updateProductImage(productsId, productImgId, fileUrl);
            };
            finder.popup();
        }

        function addImageProduct(url) {
            var currentId = $('#tbHtml tr').length + 1;
            var str = `
            <tr id="trow_${currentId}">
                <td class="text-center">${currentId}</td>
                <td class="text-center"><img width="80" src="${url}" /> <input type='hidden' value="${url}" name="Images"/></td>
                <td class="text-center"><input type="radio" name="rDefault" value="${currentId}" ${currentId === 1 ? 'checked="checked"' : ''}/></td>
                <td class="text-center"><a href="#" data-id="${currentId}" class="btn btn-sm btn-danger btnXoaAnh">Xóa</a></td>
            </tr>`;
            $('#tbHtml').append(str);
            $('#tCurrentId').val(currentId);
        }

        // Hàm JavaScript để cập nhật hình ảnh sản phẩm
        function updateProductImage(productsId, productImgId, newImageUrl) {
            $.ajax({
                type: "POST",
                url: "/admin/Product/UpdateImage",
                data: {
                    productsId: productsId,
                    productImgId: productImgId,
                    imageUrl: newImageUrl,
                    isDefault: true // hoặc false tùy thuộc vào logic của bạn
                },
                success: function (response) {
                    alert(response.message);
                    if (response.success) {
                        location.reload();
                    }
                },
                error: function () {
                    alert('Đã xảy ra lỗi khi gửi yêu cầu cập nhật ảnh');
                }
            });
        }


    </script>
}

