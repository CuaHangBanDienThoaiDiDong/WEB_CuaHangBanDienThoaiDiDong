
@model WebSite_CuaHangDienThoai.Models.Token.Client.Client_TokenAccount
@using (Ajax.BeginForm("LogIn", "Account", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "load_data",
    OnSuccess = "OnSuccessCO",
    OnFailure = "OnFailure",
    OnBegin = "OnBeginCO"
}, new { @Id = "myForm" }))
{
    <script>

        function validateForm() {
            //var sdt = document.getElementById('Name').value.trim();
            //var tenKhachHang = document.getElementById('SDT').value.trim();
            //var email = document.getElementById('CCCD').value.trim();
            var OrigianlPrice = document.getElementById('OrigianlPrice').value.trim();
            var Price = document.getElementById('Price').value.trim();
            var confirmPassword = document.getElementById('Title').value.trim();


            if (!confirmPassword) {

                Swal.fire({
                    icon: "error",
                    title: "Lỗi tìm...",
                    text: "Vui lòng điền đầy đủ thông tin.",
                    /*footer: '<a href="#">Why do I have this issue?</a>'*/
                });
                return false;

            }

            if (Price < OrigianlPrice) {
                Swal.fire({
                    icon: "error",
                    title: "Lỗi giá bán...",
                    text: "Giá bán không hợp lý.",
                    /*footer: '<a href="#">Why do I have this issue?</a>'*/
                });
                return false;
            }


            if (password !== confirmPassword) {

                Swal.fire({
                    icon: "warning",
                    title: "Lỗi tìm...",
                    text: "Mật khẩu và xác nhận mật khẩu không khớp.",
                    /*footer: '<a href="#">Why do I have this issue?</a>'*/
                });
                return false;
                return false;
            }



            return true;
        }


        function OnBeginCO() {
            $('#btnRegister').attr("disabled", "disabled");
        }



        function OnSuccessCO(res) {
            if (res.Success) {
                if (res.Code == 1) {


                    const Toast = Swal.mixin({
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.onmouseenter = Swal.stopTimer;
                            toast.onmouseleave = Swal.resumeTimer;
                        }
                    });

                    Toast.fire({
                        icon: "success",
                        title: "Thêm sản phẩm  thành công"
                    });
                    location.href = "/admin/Products/index";

                } else {
                }
            }
            else {
                if (res.Code == -2) {
                    Swal.fire({
                        icon: "error",
                        title: "Không thể bỏ trống...",
                        text: "Vui lòng điền đầy đủ thông tin",
                        footer: '<a href="#">Why do I have this issue?</a>'
                    });

                }
                if (res.Code == -3) {
                    Swal.fire({
                        icon: "warning",
                        title: "Sản phẩm đã tồn tại...",
                        text: "Cấu hình này đã có dữ liệu",
                        footer: '<a href="#">Bạn có muốn cập nhật lại số lượng?</a>'
                    });
                }
                if (res.Code == -4) {
                    Swal.fire({
                        icon: "question",
                        title: "Lỗi thêm nhân viên...",
                        text: "Không thấy chức năng cho nhân viên mới ",
                        footer: '<a href="#">Why do I have this issue?</a>'
                    });

                }
                if (res.Code == -5) {
                    Swal.fire({
                        icon: "info",
                        title: "Lỗi tìm...",
                        text: "Mã hàng được trả về ",
                        footer: '<a href="#">Why do I have this issue?</a>'
                    });
                }
                if (res.Code == -6) {
                    Swal.fire({
                        icon: "warning",
                        title: "Lỗi tìm...",
                        text: "Đơn hàng lập lại 2 lần ",
                        footer: '<a href="#">Why do I have this issue?</a>'
                    });
                }
            }

        }





        function togglePasswordVisibility(inputId, buttonId) {
            var passwordInput = document.getElementById(inputId);
            var toggleButton = document.getElementById(buttonId);

            if (passwordInput.type === "password") {
                passwordInput.type = "text";
                toggleButton.textContent = "Ẩn mật khẩu";
            } else {
                passwordInput.type = "password";
                toggleButton.textContent = "Hiện mật khẩu";
            }
        }

    </script>


    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
<form>
    @using (Html.BeginForm("LogIn", "Account", FormMethod.Post, new { }))
    {
        <form class="login100-form validate-form">
            <span class="login100-form-title">
                Đăng nhập
            </span>

            <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
                @*<input class="input100" type="text" name="email" placeholder="Email">*@
                @Html.TextBoxFor(m => m.SDT, "", new { @class = "form-control input100", @placeholder = "Nhập Số Điện Thoại Của Bạn" })
                <span class="focus-input100"></span>
                <span class="symbol-input100">
                    <i class="fa fa-envelope" aria-hidden="true"></i>
                </span>
            </div>

            <div class="wrap-input100 validate-input" data-validate="Password is required">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control input100", @placeholder = "Mật khẩu" })
                @*<input class="input100" type="password" name="pass" placeholder="Password" id="password-field">*@
                <span toggle="#password-field" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                <span class="focus-input100"></span>
                <span class="symbol-input100">
                    <i class="fa fa-lock" aria-hidden="true"></i>
                </span>
            </div>

            <div class="container-login100-form-btn">
                <button class="login100-form-btn">
                    Đăng nhập
                </button>
            </div>

            <div class="text-center p-t-12">
                <span class="txt1">
                    Bạn quên mật khẩu ?
                </span>
                <a class="txt2" href="/Account/Forgotpassword">
                    Khôi phục
                </a>
            </div>

            <div class="text-center p-t-136">
                <a class="txt2" href="/Account/Register">
                    Tạo tài khoản
                    <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                </a>
            </div>
        </form>


        <!--<div data-mdb-input-init class="form-outline mb-4">-->
        @*<input type="email" id="form2Example11" class="form-control"
            placeholder="Số điện thoại hoặc mail" />*@
        <!--@Html.TextBoxFor(m => m.SDT, "", new { @class = "form-control", @placeholder = "Nhập Số Điện Thoại Của Bạn" })
            <label class="form-label" for="form2Example11">Tài khoản</label>
        </div>

        <div data-mdb-input-init class="form-outline mb-4">-->
        @*<input type="password" id="form2Example22" class="form-control" />*@
        <!--<label class="form-label" for="form2Example22"><h5>Mật khẩu</h5></label>
            <div class="row">


                <div class="col-md-11">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Mật khẩu" })
                </div>
                <div class="col-md-1">
                    <button type="button" class="btn btn-success" onclick="togglePasswordVisibility('Password', 'togglePasswordBtn')"><i class="far fa-eye"></i></button>

                </div>
            </div>



        </div>

        <div class="text-center pt-1 mb-5 pb-1">
            <button data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="submit">
                Đăng Nhập
            </button>
            <a class="text-muted" href="/Account/Forgotpassword">Quên mật khẩu ?</a>
        </div>

        <div class="d-flex align-items-center justify-content-center pb-4">
            <p class="mb-0 me-2">Bạn chưa có tài khoản ?</p>
            <a href="/Account/Register" data-mdb-button-init data-mdb-ripple-init class="btn btn-outline-danger">Tạo mới</a>
        </div>-->


    }

</form>
  


    




    }