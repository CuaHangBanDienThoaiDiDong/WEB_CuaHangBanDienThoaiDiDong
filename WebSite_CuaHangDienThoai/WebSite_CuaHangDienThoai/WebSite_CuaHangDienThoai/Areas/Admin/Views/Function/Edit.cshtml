@model WebSite_CuaHangDienThoai.Models.tb_Function
@{
    ViewBag.Title = "Chỉnh sửa chức năng";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/Homepage" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/news" class="nav-link">Chức năng</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Cập nhật</a>
        </li>
    </ul>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Cập nhật chức năng</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Chức năng</a></li>
                    <li class="breadcrumb-item active">Cập nhật</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<section class="content">
    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin cập nhật</h3>
        </div>
        <div class="card-body">
            <div class="bs-stepper-content">
                @using (Html.BeginForm("Edit", "Function", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.FunctionId)
                        @Html.HiddenFor(model => model.CreatedBy)
                        @Html.HiddenFor(model => model.CreatedDate)

                        <div class="form-group">
                            <h4>Tên chức năng</h4>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TitLe, new { htmlAttributes = new { @class = "form-control", id = "TitLe" } })
                                @Html.ValidationMessageFor(model => model.TitLe, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <h4>Tạo bởi</h4>
                            <div class="col-md-10">
                                @Model.CreatedBy
                            </div>
                        </div>
                        <div class="form-group" style="display:none">
                            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12 text-center">
                                <input type="submit" value="Lưu" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <!-- /.card-body -->
            <div class="card-footer">
            </div>
            <!-- /.card-footer-->
        </div>
        <!-- /.card -->
</section>

@section scripts {
    <script>
        $(document).ready(function () {
            function validateForm() {
                var isValid = true;
                var titleField = $('#TitLe');
                if (!titleField.val().trim()) {
                    titleField.addClass('is-invalid'); // Thêm class is-invalid để highlight trường lỗi
                    isValid = false;
                } else {
                    titleField.removeClass('is-invalid'); // Xóa class is-invalid nếu trường không lỗi
                }
                return isValid;
            }

            $('form').submit(function () {
                if (!validateForm()) {
                    Swal.fire({
                        icon: "error",
                        title: "Lỗi...",
                        text: "Vui lòng nhập đầy đủ thông tin",
                    });
                    return false; // Ngăn không cho form submit nếu thông tin không hợp lệ
                }
            });
        });
    </script>
}
