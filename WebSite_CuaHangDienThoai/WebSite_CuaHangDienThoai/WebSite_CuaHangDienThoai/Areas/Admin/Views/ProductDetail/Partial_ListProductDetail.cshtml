@model PagedList.PagedList<WebSite_CuaHangDienThoai.Models.tb_ProductDetail>
@using PagedList.Mvc;
<style>
    .copy-container {
        position: relative;
        display: inline-block;
    }

    .copy-button {
        display: none;
        position: absolute;
        top: 0;
        right: 0;
        background-color: #f0f0f0;
        border: 1px solid #ccc;
        padding: 2px 5px;
        cursor: pointer;
    }

    .copy-container:hover .copy-button {
        display: inline-block;
    }
</style>

<table class="table table-hover">
    <thead>
        <tr class="text-center">
          
            <th>STT</th>
            <th>Hình ảnh</th>

            <th>Dòng sản phẩm</th>
            <th>Tồn kho</th>
            <th>Loại sản phẩm</th>
            <th>Hãng</th>

            <th>Ram/Dung Lượng  </th>
            <th>Màu</th>


        </tr>
    </thead>
    @if (ViewBag.txt == null)
    {
        <tbody>
            @if (Model != null && Model.Any())
            {
                string displayAlias = null;
                string alias = null;

                var i = ((ViewBag.Page - 1) * ViewBag.PageSize) + 1;
                foreach (var item in Model)
                {



                    byte[] strImg = null;
                    var CheckImage = item.tb_ProductDetailImage.FirstOrDefault(x => x.IsDefault == true);
                    var quantityWareHouse = item.tb_WarehouseDetail.SingleOrDefault(x => x.ProductDetailId == item.ProductDetailId);
                    if (CheckImage != null)
                    {
                        strImg = CheckImage.Image;
                    }
                    if (item.tb_Products.Alias != null)
                    {
                        int maxLength = 8;
                        alias = item.tb_Products.Alias;
                        displayAlias = alias.Length > maxLength ? alias.Substring(0, maxLength) + "..." : alias;

                    }
                    string imgSrc = "";
                    if (strImg != null && strImg.Length > 0)
                    {
                        string base64String = Convert.ToBase64String(strImg);
                        imgSrc = $"data:image;base64,{base64String}";
                    }
                    <tr class="text-center" id="trow_@item.ProductsId">
                       
                        <td>@i</td>
                        <td style="width:20%"><img class="imgproduct" data-id="@item.ProductsId" src="@imgSrc" style="width:50%" /></td>

                        <td>
                            <a href="/chi-tiet/@item.tb_Products.Alias-p@(item.ProductsId)" target="_blank">
                                @item.tb_Products.Title
                            </a>
                            <br />
                            <div class="copy-container text-center">


                                <p>@displayAlias</p>
                                <button class="copy-button btn btn-success" onclick="copyToClipboard('@alias')">Sao chép</button>
                            </div>
                        </td>
                        <td>
                            @if (quantityWareHouse != null)
                            {
                                <span> @quantityWareHouse.QuanTity</span>
                            }
                            else
                            {
                                <span class="text-danger">Hết hàng  </span>
                            }
                        </td>
                        <td>@item.tb_Products.tb_ProductCategory.Title</td>
                        <td>
                            @item.tb_Products.tb_ProductCompany.Title

                        </td>
                        <td>
                            <span>
                                @if (item.Capacity >= 999)
                                {
                                    <span>1Tb</span>
                                }
                                else if (item.Capacity == 2999)
                                {
                                    <span>2Tb</span>
                                }
                                else
                                {
                                    <span>@item.Capacity</span>
                                }

                            </span>
                        </td>
                        <td><p>@item.Color</p></td>


                    </tr>



                    i++;
                }
            }

        </tbody>

    }
    else
    {
        <tbody>
            <tr class="text-center text-danger">
                <td>@ViewBag.txt</td>
            </tr>
        </tbody>
    }

</table>

<hr />
<div class="row">
    <div class="col-12 d-flex justify-content-center">
        <nav aria-label="Page navigation">
            <ul class="pagination pagination-sm">
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" href="#" data-page="1" aria-label="First">
                        <span aria-hidden="true">Đầu</span>
                    </a>
                </li>
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" href="#" data-page="@(Model.PageNumber - 1)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @for (int i = Model.PageNumber; i <= Model.PageNumber + 4 && i <= Model.PageCount; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link" href="#" data-page="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                    <a class="page-link" href="#" data-page="@(Model.PageNumber + 1)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
                <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                    <a class="page-link" href="#" data-page="@Model.PageCount" aria-label="Last">
                        <span aria-hidden="true">Cuối</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>


<script>
    $(document).ready(function () {
        originalContent = $('#loadListSortProductDetail').html();
        $('#clearInputHoaDon').click(function () {
            $("#searchHoaDon").val(""); // Xóa nội dung trong ô tìm kiếm
            resetHoaDon(); // Đặt lại nội dung ban đầu
        });

        $('#searchHoaDon').on('input', function () {
            var keyword = $(this).val().trim();
            if (keyword.length > 0) {
                // Gọi action SuggestBillCustomer với keyword
                $.ajax({
                    url: '/Admin/Seller/SuggestProduct',
                    type: 'GET',
                    data: { search: keyword },
                    success: function (response) {
                        $('#loadListSortProductDetail').html(response);
                    },
                    error: function () {
                        // Xử lý lỗi nếu có
                        console.log('Đã xảy ra lỗi khi tải dữ liệu.');
                    }
                });
            } else {
                resetHoaDon(); // Đặt lại nội dung ban đầu nếu không có keyword
            }
        });

    });

    function resetHoaDon() {
        $('#loadListSortProductDetail').html(originalContent);
    }



    function copyToClipboard(text) {

        var tempTextarea = document.createElement("textarea");
        tempTextarea.value = text;
        document.body.appendChild(tempTextarea);


        tempTextarea.select();
        tempTextarea.setSelectionRange(0, 99999);

        document.execCommand("copy");
        document.body.removeChild(tempTextarea);


        const Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 1000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
            }
        });

        Toast.fire({
            icon: "success",
            title: "Đã sao chép mã "
        });
    }
</script>
