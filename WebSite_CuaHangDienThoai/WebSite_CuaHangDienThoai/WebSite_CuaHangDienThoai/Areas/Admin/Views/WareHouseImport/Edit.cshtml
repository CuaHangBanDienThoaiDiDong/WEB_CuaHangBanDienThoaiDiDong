@model WebSite_CuaHangDienThoai.Models.Admin_TokenEditImportWareHouse
@{
    ViewBag.Title = "Chỉnh sửa phiếu nhập kho";
}
<div class="card">

    <div id="alter" style="position: fixed; top: 20px; right: 30px; z-index: 9999; display: block;">
        <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="mr-auto">Thông báo</strong>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="toast-body">
                <div id="alertMessage">Thuânjas</div>
            </div>
        </div>
    </div>
    <form id="editBill" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ImportWareHosue)
        @Html.HiddenFor(model => model.CreatedBy)
        @Html.HiddenFor(model => model.CreatedDate)
        @Html.HiddenFor(model => model.StaffId)
        @Html.HiddenFor(model => model.WarehouseId)
        <div class="card-body" id="">
            <div class="row">
                <div class="col-6">
                    Thông tin nhập kho
                    <label for="exampleInputEmail1">Danh sách nhà cung cấp</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SupplierId, (SelectList)ViewBag.SupplierList, "-Chọn nhà cung cấp-", new { @class = "form-control", @id = "listSupplier" })
                        @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                    </div>
                    <div id="load_data_Supplier">
                        <!-- Nội dung nhà cung cấp sẽ được tải vào đây -->
                    </div>
                </div>
                <div class="col-6">
                    <div class="card">
                        <div class="card-header">
                            <p>Thông tin nhận hàng</p>
                        </div>
                        <div class="card-body">
                            <div class="form-group">
                                <span><label for="exampleInputEmail1">Nhận hàng:</label> @Model.Staff.NameStaff</span>
                            </div>
                            <div class="form-group">
                                <span><label for="exampleInputEmail1">Ngày nhận :</label> @Model.CreatedDate</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <p id="loadListItem">Loading...</p>
            </div>
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col-md-2"></div>
                <div class="col-md-8 text-center">
                    <div class="form-group">
                        <button type="submit" class="btn btn-success btn-edit-phieu-nhap">
                            Lưu Lại
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clipboard-plus" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M8 7a.5.5 0 0 1 .5.5V9H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V10H6a.5.5 0 0 1 0-1h1.5V7.5A.5.5 0 0 1 8 7" />
                                <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1z" />
                                <path d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0z" />
                            </svg>
                        </button>
                    </div>
                </div>
                <div class="col-md-2"></div>
            </div>
        </div>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

<script>
    $(document).ready(function () {
        // Load dữ liệu nhà cung cấp và danh sách sản phẩm ban đầu
        loadSupplierData();
        var importWareHouseId = @Model.ImportWareHosue;
        loadListItem(importWareHouseId);

        // Xử lý khi thay đổi nhà cung cấp
        $("#listSupplier").change(function () {
            var idSupplier = $(this).val();
            if (idSupplier && idSupplier !== "-Chọn nhà cung cấp-") {
                $.ajax({
                    url: '/admin/WareHouseImport/Partial_Supplier',
                    type: 'GET',
                    data: { id: idSupplier },
                    success: function (response) {
                        $('#load_data_Supplier').html(response);
                    },
                    error: function (xhr, status, error) {
                        console.error("Lỗi: " + status + " - " + error);
                        console.error(xhr.responseText);
                        showNotification('danger', 'Lỗi', 'Đã xảy ra lỗi khi tải thông tin nhà cung cấp: ' + xhr.responseText);
                    }
                });
            }
        });

        // Hàm tải danh sách sản phẩm
        function loadListItem(id) {
            if (id != null) {
                $.ajax({
                    url: '@Url.Action("Partail_ListProductForEdit", "WareHouseImport")',
                    type: 'GET',
                    data: { id: id },
                    success: function (response) {
                        $("#loadListItem").html(response);
                        attachDeleteItemEvent(); // Gắn sự kiện xóa sản phẩm
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                        showNotification('danger', 'Lỗi', 'Đã xảy ra lỗi khi tải lại danh sách sản phẩm.');
                    }
                });
            }
        }

        // Hàm tải dữ liệu nhà cung cấp
        function loadSupplierData() {
            var idSupplier = $("#listSupplier").val();
            if (idSupplier !== "-Chọn nhà cung cấp-") {
                $.ajax({
                    url: '/admin/WareHouseImport/Partial_Supplier',
                    type: 'GET',
                    data: { id: idSupplier },
                    success: function (response) {
                        $('#load_data_Supplier').html(response);
                    },
                    error: function (xhr, status, error) {
                        console.error("Lỗi: " + status + " - " + error);
                        console.error(xhr.responseText);
                        showNotification('danger', 'Lỗi', 'Đã xảy ra lỗi khi tải thông tin nhà cung cấp: ' + xhr.responseText);
                    }
                });
            }
        }

        $(document).on('input', '.Update_Quantity_For_Edit', function () {
            var input = $(this);
            var newQuantity = input.val().trim(); // Lấy giá trị và loại bỏ khoảng trắng ở hai đầu

            // Kiểm tra và lưu trữ giá trị ban đầu nếu chưa có
            if (!input.data('original-value')) {
                input.data('original-value', input.val()); // Lưu giá trị ban đầu
            }

            // Xử lý khi số lượng là rỗng hoặc bằng 0
            if (newQuantity === "" || parseInt(newQuantity) === 0) {
                // Hiển thị cảnh báo và yêu cầu xác nhận
                if (confirm("Số lượng không thể nhỏ hơn 0. Bạn có muốn khôi phục lại số lượng cũ không?")) {
                    // Khôi phục lại số lượng cũ
                    input.val(input.data('original-value'));
                } else {
                    // Không đồng ý, giữ nguyên giá trị nhập vào và không cập nhật
                    return;
                }
            } else {
                // Nếu số lượng hợp lệ, tiến hành cập nhật
                updateQuantity(input);
            }
        });
        // Hàm cập nhật số lượng
        function updateQuantity(input) {
            var importWareHosueId = input.data('importwarehousedid');
            var importWarehouseDetailId = input.data('importwarehousedetailid');
            var newQuantity = input.val().trim();

            // Gọi ajax cập nhật số lượng
            $.ajax({
                url: '/Admin/WareHouseImport/UpdateQuantityForEditNew',
                type: 'POST',
                data: {
                    productDetailId: input.attr('id'),
                    importWarehouseDetailId: importWarehouseDetailId,
                    importWarehouseId: importWareHosueId,
                    quantity: newQuantity
                },
                success: function (response) {
                    if (response.success) {
                        alert("Cập nhật số lượng thành công");
                        /*showNotification('success', 'Cập nhật thành công', response.message);*/
                       
                    } else {
                       /* showNotification('danger', 'Lỗi', response.message);*/
                        alert("Lỗi cập nhật số lượng thành công");
                        input.val(input.data('original-quantity'));
                    }
                },
                error: function (xhr, status, error) {
                    showNotification('danger', 'Lỗi', 'Không thể kết nối tới máy chủ. Vui lòng thử lại sau.');
                    // Khôi phục lại giá trị ban đầu
                    input.val(input.data('original-quantity'));
                }
            });
        }

        // Sự kiện submit biểu mẫu chỉnh sửa
        $('#editBill').on('submit', function (event) {
            event.preventDefault(); // Ngăn chặn hành động submit mặc định
            var form = $(this)[0];
            var formData = new FormData(form);
            $.ajax({
                url: '@Url.Action("Edit", "WareHouseImport")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.Code === 1) {
                        if (confirm("Hóa đơn đã có trong hệ thống ")) {
                            window.location.href = '@Url.Action("DownloadInvoice", "WareHouseImport")?filePath=' + encodeURIComponent(response.FilePath);
                        }
                    }
                },
                error: function (xhr, status, error) {
                    showNotification('danger', 'Lỗi', 'Không thể kết nối tới máy chủ. Vui lòng thử lại sau.');
                }
            });
        });

        // Hàm hiển thị thông báo
        function showNotification(type, title, message) {
            var alertDiv = $('#alert');
            alertDiv.removeClass().addClass('alert alert-' + type);
            $('#alertMessage').html('<strong>' + title + '</strong>: ' + message);
            alertDiv.show();
            setTimeout(function () {
                alertDiv.hide();
            }, 3000); // Ẩn thông báo sau 3 giây
        }

        // Gắn sự kiện xóa sản phẩm
        function attachDeleteItemEvent() {
            // Code gắn sự kiện xóa sản phẩm ở đây nếu cần thiết
        }
    });
</script>


@*<script>
    $(document).ready(function () {
        loadSupplierData();
        var importWareHouseId = @Model.ImportWareHosue;
        loadListItem(importWareHouseId);

        $("#listSupplier").change(function () {
            var idSupplier = $(this).val();
            if (idSupplier && idSupplier !== "-Chọn nhà cung cấp-") {
                $.ajax({
                    url: '/admin/WareHouseImport/Partial_Supplier',
                    type: 'GET',
                    data: { id: idSupplier },
                    success: function (response) {
                        $('#load_data_Supplier').html(response);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error: " + status + " - " + error);
                        console.error(xhr.responseText);
                        showNotification('danger', 'Lỗi', 'Đã xảy ra lỗi khi tải thông tin nhà cung cấp: ' + xhr.responseText);
                    }
                });
            }
        });

        function loadListItem(id) {
            if (id != null) {
                $.ajax({
                    url: '@Url.Action("Partail_ListProductForEdit", "WareHouseImport")',
                    type: 'GET',
                    data: { id: id },
                    success: function (response) {
                        $("#loadListItem").html(response);
                        attachDeleteItemEvent();
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                        showNotification('danger', 'Lỗi', 'Đã xảy ra lỗi khi tải lại danh sách sản phẩm.');
                    }
                });
            }
        }

        function loadSupplierData() {
            var idSupplier = $("#listSupplier").val();
            if (idSupplier !== "-Chọn nhà cung cấp-") {
                $.ajax({
                    url: '/admin/WareHouseImport/Partial_Supplier',
                    type: 'GET',
                    data: { id: idSupplier },
                    success: function (response) {
                        $('#load_data_Supplier').html(response);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error: " + status + " - " + error);
                        console.error(xhr.responseText);
                        showNotification('danger', 'Lỗi', 'Đã xảy ra lỗi khi tải thông tin nhà cung cấp: ' + xhr.responseText);
                    }
                });
            }
        }

        function submitForm(event) {
            event.preventDefault(); // Ngăn chặn hành động submit mặc định
            var form = $('#editBill')[0];
            var formData = new FormData(form);

            $.ajax({
                url: '@Url.Action("Edit", "WareHouseImport")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        showNotification('success', 'Cập nhật thành công', 'Hóa đơn đã được cập nhập.');
                        setTimeout(function() {
                            location.reload();
                        }, 3000);
                    } else {
                        var errorMessage = '';
                        switch (response.code) {
                            case -1:
                                errorMessage = 'Không đủ dữ liệu.';
                                break;
                            case -2:
                                errorMessage = 'Không tìm thấy hóa đơn.';
                                break;
                            case -3:
                                errorMessage = 'Không tìm thấy hóa đơn.';
                                break;
                            case -4:
                                errorMessage = 'Hóa phải có ít nhất 1 sản phẩm.';
                                break;
                            case -5:
                                errorMessage = 'Không tìm thấy nhà cung cấp.';
                                break;
                            case -100:
                                errorMessage = 'Đã xảy ra lỗi: ' + response.message;
                                break;
                            default:
                                errorMessage = 'Đã xảy ra lỗi. Vui lòng thử lại.';
                                break;
                        }
                        showNotification('danger', 'Lỗi', errorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    showNotification('danger', 'Lỗi', 'Không thể kết nối tới máy chủ. Vui lòng thử lại sau.');
                }
            });
        }

        function showNotification(type, title, message) {
            var alertDiv = $('#alter');
            alertDiv.removeClass();
            alertDiv.addClass('toast toast-' + type);
            $('#alertMessage').html('<strong>' + title + '</strong>: ' + message);
            alertDiv.show();
            setTimeout(function() {
                alertDiv.hide();
            }, 3000);
        }

        $('#editBill').on('submit', submitForm);
    });
    </script>*@
