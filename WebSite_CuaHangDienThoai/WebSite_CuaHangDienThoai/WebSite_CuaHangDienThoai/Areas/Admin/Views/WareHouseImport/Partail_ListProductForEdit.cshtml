@model WebSite_CuaHangDienThoai.Models.Admin_TokenEditImportWareHouse

<div id="alter" style="position: fixed; top: 20px; right: 30px; z-index: 9999; display: block;">
    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="mr-auto">Thông báo</strong>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="toast-body">
            <div id="alertMessage"></div>
        </div>
    </div>
</div>



<h4 class=" text-center">Thông tin sản phẩm</h4><p>Số lượng sản phẩm <span class="text-danger">@ViewBag.Count</span></p>

<div style="overflow-x:auto;">
    <!-- Bảng chứa thead -->
    <table class="table table-hover">
        <thead>
            <tr class="text-center">
                @*<th><input type="checkbox" id="SelectAll" /></th>*@

                <th>Hình ảnh</th>
                <th>Tên sản phẩm</th>
                <th>Số lượng</th>
                <th>Màu</th>
                <th>Loại sản phẩm</th>
                @*<th>Giá nhập</th>*@


                <th>Dung lượng</th>
                <th></th>
            </tr>
        </thead>
    </table>

    <!-- Div chứa tbody với cuộn dọc -->
    <div style="max-height: 250px; overflow-y: auto;">
        <table class="table table-hover">
            <tbody>

                @if (Model != null)
                {
                    <div style="overflow-x:auto;">
                        <table class="table table-hover">

                            <tbody>
                                @foreach (var item in Model.Items)
                                {

                                    var checkImg = item.Product.tb_Products.tb_ProductImage.FirstOrDefault(x => x.IsDefault == true);
                                    byte[] strImg = null;

                                    var Capacity = "";

                                    string[] dungLuongOptions = new string[] { "1Tb", "2 Tb" };
                                    int[] nguongDungLuong = new int[] { 999, 1999 };
                                    int index = Array.FindIndex(nguongDungLuong, capacity => item.Product.Capacity > capacity);
                                    Capacity = index != -1 ? dungLuongOptions[index] : item.Product.Capacity + " Gb";

                                    if (checkImg != null)
                                    {
                                        strImg = checkImg.Image;
                                    }

                                    string imgSrc = "";
                                    if (strImg != null && strImg.Length > 0)
                                    {
                                        string base64String = Convert.ToBase64String(strImg);
                                        imgSrc = $"data:image;base64,{base64String}";
                                    }

                                    <tr class="opacity-100 " id="trow_@item.ProductDetailId">
                                        <td class="text-center">
                                            <img class="imgproduct" data-id="@item.ProductDetailId" src="@imgSrc" width="50" />
                                        </td>
                                        <td class="text-center">
                                            <a href="/admin/Products/Detail/@item.ProductDetailId" style="color:black">@item.Product.tb_Products.Title</a>
                                        </td>
                                        <td class="text-center">
                                            <input type="number" class="form-control Update_Quantity_For_Edit" style="width:100%" id="@item.ProductDetailId" data-importwarehousedid="@item.ImportWareHosueId" data-importwarehousedetailid="@item.ImportWarehouseDetailId" data-idWareHouse="@item.ImportWareHosueId" value="@item.Quantity" />
                                        </td>
                                        <td class="text-center">@item.Product.Color</td>
                                        <td>@item.Product.tb_Products.tb_ProductCategory.Title</td>
                                        <td>@Capacity</td>
                                        <td>
                                            <div class="btn btnDeleteItemImportWareHouseNew"
                                                 data-importid="@Model.ImportWareHosue"
                                                 data-importwarehousedetailid="@item.ImportWarehouseDetailId">
                                                <svg xmlns="http://www.w3.org/2000/svg" style="color:red;" width="16" height="16" fill="currentColor" class="bi bi-x-octagon-fill" viewBox="0 0 16 16">
                                                    <path d="M11.46.146A.5.5 0 0 0 11.107 0H4.893a.5.5 0 0 0-.353.146L.146 4.54A.5.5 0 0 0 0 4.893v6.214a.5.5 0 0 0 .146.353l4.394 4.394a.5.5 0 0 0 .353.146h6.214a.5.5 0 0 0 .353-.146l4.394-4.394a.5.5 0 0 0 .146-.353V4.893a.5.5 0 0 0-.146-.353zm-6.106 4.5L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 1 1 .708-.708" />
                                                </svg>
                                            </div>

                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p class="text-danger">Không tìm thấy bản ghi nào !!!</p>
                }
            </tbody>
        </table>
    </div>
</div>

<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

   $(document).ready(function () {
    var isDeleting = false; // Biến flag để kiểm tra trạng thái xóa

    // Gắn sự kiện click cho các nút xóa sản phẩm
    $('.btnDeleteItemImportWareHouseNew').on('click', function () {
        var button = $(this); // Lưu lại nút đang được click để sử dụng sau này
        var ImportWareHosueId = button.data('importid');
        var ImportWarehouseDetailId = button.data('importwarehousedetailid');

        if (!isDeleting) { // Kiểm tra nếu đang xử lý xóa
            isDeleting = true; // Đánh dấu là đang xóa

            if (confirm("Bạn có chắc chắn muốn xóa sản phẩm này không?")) {
                deleteItem(ImportWareHosueId, ImportWarehouseDetailId, button); // Chuyển tham số button để sử dụng sau này
            } else {
                isDeleting = false; // Đặt lại trạng thái nếu hủy xóa
            }
        }
    });

    // Hàm gửi request xóa sản phẩm
    function deleteItem(ImportWareHosueId, ImportWarehouseDetailId, button) {
        $.ajax({
            url: '/Admin/WareHouseImport/DeleteItemImportWareHouse',
            type: 'POST',
            data: { id: ImportWareHosueId, ImportWarehouseDetailId: ImportWarehouseDetailId },
            success: function (response) {
                if (response.success) {
                    setTimeout(function () {
                        loadListItem(ImportWareHosueId); // Load lại danh sách sau khi xóa thành công
                        showNotification('success', 'Xóa thành công', response.message);
                        isDeleting = false; // Đặt lại trạng thái sau khi hoàn thành
                    }, 1000); // Đợi 1 giây trước khi load lại
                } else {
                    isDeleting = false; // Đặt lại trạng thái nếu xóa không thành công
                   c showNotification('error', 'Lỗi', response.message);
                }
            },
            error: function (xhr, status, error) {
                isDeleting = false; // Đặt lại trạng thái nếu có lỗi xóa
                console.error(xhr.responseText);
                showNotification('error', 'Lỗi', 'Đã xảy ra lỗi khi xóa sản phẩm.');
            }
        });
    }

    // Hàm tải lại danh sách sản phẩm sau khi xóa
    function loadListItem(id) {
        if (id != null) {
            $.ajax({
                url: '@Url.Action("Partail_ListProductForEdit", "WareHouseImport")',
                type: 'GET',
                data: { id: id },
                success: function (response) {
                    $("#loadListItem").html(response);
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                    showNotification('error', 'Lỗi', 'Đã xảy ra lỗi khi tải lại danh sách sản phẩm.');
                }
            });
        }
    }

    // Hàm hiển thị thông báo
    function showNotification(type, title, message) {
        var alertDiv = $('#alter');
        alertDiv.removeClass();
        alertDiv.empty();
        alertDiv.addClass('alert alert-' + type);
        alertDiv.append('<strong>' + title + '</strong>: ' + message);
    }
});

</script>










